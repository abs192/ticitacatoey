{"ast":null,"code":"\"use strict\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\adish\\\\Documents\\\\GitHub\\\\ticitacatoey\\\\node_modules\\\\react-native-qrcode-generator\\\\lib\\\\QRCode.js\";\n\nvar React = require(\"react\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar createReactClass = require(\"create-react-class\");\n\nvar Canvas = require(\"./Canvas.js\");\n\nvar qr = require(\"qr.js\");\n\nvar View = require(\"react-native-web/dist/exports/View\").default;\n\nvar ActivityIndicator = require(\"react-native-web/dist/exports/ActivityIndicator\").default;\n\nfunction renderCanvas(canvas) {\n  var ctx = canvas.getContext(\"2d\");\n  var size = this.size;\n  var fgColor = this.fgColor;\n  var bgColor = this.bgColor;\n  canvas.width = size;\n  canvas.height = size;\n  canvas.style.left = (window.innerWidth - size) / 2 + \"px\";\n\n  if (window.innerHeight > size) {\n    canvas.style.top = (window.innerHeight - size) / 2 + \"px\";\n  }\n\n  ctx.fillRect(0, 0, size, size);\n  var cells = this.cells;\n  var cellWidth = this.size / cells.length;\n  var cellHeight = this.size / cells.length;\n  var nRoundedWidth = Math.round(cellWidth);\n  var nRoundedHeight = Math.round(cellHeight);\n  cells.forEach(function (row, rowIndex) {\n    row.forEach(function (column, columnIndex) {\n      var nLeft = columnIndex * cellWidth;\n      var nTop = rowIndex * cellHeight;\n      ctx.fillStyle = ctx.strokeStyle = column ? bgColor : fgColor;\n      ctx.lineWidth = 1;\n      ctx.fillRect(nLeft, nTop, cellWidth, cellHeight);\n      ctx.strokeRect(Math.floor(nLeft) + 0.5, Math.floor(nTop) + 0.5, nRoundedWidth, nRoundedHeight);\n      ctx.strokeRect(Math.ceil(nLeft) - 0.5, Math.ceil(nTop) - 0.5, nRoundedWidth, nRoundedHeight);\n    });\n  });\n}\n\nfunction getDiff(x, y) {\n  return Object.keys(x).some(function (value) {\n    return x[value] !== y[value];\n  });\n}\n\nvar QRCode = createReactClass({\n  displayName: \"QRCode\",\n  PropTypes: {\n    value: PropTypes.string,\n    size: PropTypes.number,\n    bgColor: PropTypes.string,\n    fgColor: PropTypes.string,\n    onLoad: PropTypes.func,\n    onLoadEnd: PropTypes.func,\n    getImageOnLoad: PropTypes.func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      value: \"https://github.com/rishichawda/react-native-qrcode-generator\",\n      fgColor: \"white\",\n      bgColor: \"black\",\n      size: 128,\n      onLoad: function onLoad() {},\n      onLoadEnd: function onLoadEnd() {},\n      getImageOnLoad: function getImageOnLoad() {}\n    };\n  },\n  componentDidUpdate: function componentDidUpdate(prev) {\n    var hasChanged = getDiff(prev, this.props);\n\n    if (hasChanged) {\n      this.setState({\n        isLoading: true\n      });\n    }\n  },\n  getInitialState: function getInitialState() {\n    return {\n      isLoading: true\n    };\n  },\n  onLoadEnd: function onLoadEnd() {\n    var _this = this;\n\n    this.setState({\n      isLoading: false\n    }, function () {\n      _this.props.onLoadEnd();\n    });\n  },\n  utf16to8: function utf16to8(str) {\n    var out, i, len, c;\n    out = \"\";\n    len = str.length;\n\n    for (i = 0; i < len; i++) {\n      c = str.charCodeAt(i);\n\n      if (c >= 0x0001 && c <= 0x007f) {\n        out += str.charAt(i);\n      } else if (c > 0x07ff) {\n        out += String.fromCharCode(0xe0 | c >> 12 & 0x0f);\n        out += String.fromCharCode(0x80 | c >> 6 & 0x3f);\n        out += String.fromCharCode(0x80 | c >> 0 & 0x3f);\n      } else {\n        out += String.fromCharCode(0xc0 | c >> 6 & 0x1f);\n        out += String.fromCharCode(0x80 | c >> 0 & 0x3f);\n      }\n    }\n\n    return out;\n  },\n  render: function render() {\n    var size = this.props.size;\n    var value = this.utf16to8(this.props.value);\n    var styles = this.state.isLoading ? {\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    } : undefined;\n    return React.createElement(React.Fragment, null, this.state.isLoading && React.createElement(ActivityIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 34\n      }\n    }), React.createElement(View, {\n      style: styles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, React.createElement(Canvas, {\n      context: {\n        size: size,\n        value: this.props.value,\n        bgColor: this.props.bgColor,\n        fgColor: this.props.fgColor,\n        cells: qr(value).modules\n      },\n      generateImage: this.props.getImageOnLoad,\n      render: renderCanvas,\n      onLoad: this.props.onLoad,\n      onLoadEnd: this.onLoadEnd,\n      style: {\n        height: size,\n        width: size\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    })));\n  }\n});\nmodule.exports = QRCode;","map":{"version":3,"sources":["C:/Users/adish/Documents/GitHub/ticitacatoey/node_modules/react-native-qrcode-generator/lib/QRCode.js"],"names":["React","require","PropTypes","createReactClass","Canvas","qr","renderCanvas","canvas","ctx","getContext","size","fgColor","bgColor","width","height","style","left","window","innerWidth","innerHeight","top","fillRect","cells","cellWidth","length","cellHeight","nRoundedWidth","Math","round","nRoundedHeight","forEach","row","rowIndex","column","columnIndex","nLeft","nTop","fillStyle","strokeStyle","lineWidth","strokeRect","floor","ceil","getDiff","x","y","Object","keys","some","value","QRCode","string","number","onLoad","func","onLoadEnd","getImageOnLoad","getDefaultProps","componentDidUpdate","prev","hasChanged","props","setState","isLoading","getInitialState","utf16to8","str","out","i","len","c","charCodeAt","charAt","String","fromCharCode","render","styles","state","overflow","undefined","modules","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar React = require(\"react\");\nvar PropTypes = require(\"prop-types\");\nvar createReactClass = require(\"create-react-class\");\nvar Canvas = require(\"./Canvas.js\");\nvar qr = require(\"qr.js\");\nvar { View, ActivityIndicator } = require(\"react-native\");\n\nfunction renderCanvas(canvas) {\n  var ctx = canvas.getContext(\"2d\");\n  var size = this.size;\n  var fgColor = this.fgColor;\n  var bgColor = this.bgColor;\n  canvas.width = size;\n  canvas.height = size;\n  canvas.style.left = (window.innerWidth - size) / 2 + \"px\";\n  if (window.innerHeight > size) {\n    canvas.style.top = (window.innerHeight - size) / 2 + \"px\";\n  }\n  ctx.fillRect(0, 0, size, size);\n  var cells = this.cells;\n  var cellWidth = this.size / cells.length;\n  var cellHeight = this.size / cells.length;\n  var nRoundedWidth = Math.round(cellWidth);\n  var nRoundedHeight = Math.round(cellHeight);\n  cells.forEach(function(row, rowIndex) {\n    row.forEach(function(column, columnIndex) {\n      var nLeft = columnIndex * cellWidth;\n      var nTop = rowIndex * cellHeight;\n      ctx.fillStyle = ctx.strokeStyle = column ? bgColor : fgColor;\n      ctx.lineWidth = 1;\n      ctx.fillRect(nLeft, nTop, cellWidth, cellHeight);\n      ctx.strokeRect(\n        Math.floor(nLeft) + 0.5,\n        Math.floor(nTop) + 0.5,\n        nRoundedWidth,\n        nRoundedHeight\n      );\n      ctx.strokeRect(\n        Math.ceil(nLeft) - 0.5,\n        Math.ceil(nTop) - 0.5,\n        nRoundedWidth,\n        nRoundedHeight\n      );\n    });\n  });\n}\n\nfunction getDiff(x, y) {\n  return Object.keys(x).some(value => x[value] !== y[value]);\n}\n\nvar QRCode = createReactClass({\n  PropTypes: {\n    value: PropTypes.string,\n    size: PropTypes.number,\n    bgColor: PropTypes.string,\n    fgColor: PropTypes.string,\n    onLoad: PropTypes.func,\n    onLoadEnd: PropTypes.func,\n    getImageOnLoad: PropTypes.func\n  },\n\n  getDefaultProps: function() {\n    return {\n      value: \"https://github.com/rishichawda/react-native-qrcode-generator\",\n      fgColor: \"white\",\n      bgColor: \"black\",\n      size: 128,\n      onLoad: () => {},\n      onLoadEnd: () => {},\n      getImageOnLoad: () => {}\n    };\n  },\n\n  componentDidUpdate: function(prev) {\n    const hasChanged = getDiff(prev, this.props);\n    if (hasChanged) {\n      this.setState({ isLoading: true });\n    }\n  },\n\n  getInitialState: function() {\n    return { isLoading: true };\n  },\n\n  onLoadEnd: function() {\n    this.setState(\n      {\n        isLoading: false\n      },\n      () => {\n        this.props.onLoadEnd();\n      }\n    );\n  },\n\n  utf16to8: function(str) {\n    var out, i, len, c;\n    out = \"\";\n    len = str.length;\n    for (i = 0; i < len; i++) {\n      c = str.charCodeAt(i);\n      if (c >= 0x0001 && c <= 0x007f) {\n        out += str.charAt(i);\n      } else if (c > 0x07ff) {\n        out += String.fromCharCode(0xe0 | ((c >> 12) & 0x0f));\n        out += String.fromCharCode(0x80 | ((c >> 6) & 0x3f));\n        out += String.fromCharCode(0x80 | ((c >> 0) & 0x3f));\n      } else {\n        out += String.fromCharCode(0xc0 | ((c >> 6) & 0x1f));\n        out += String.fromCharCode(0x80 | ((c >> 0) & 0x3f));\n      }\n    }\n    return out;\n  },\n\n  render: function() {\n    var size = this.props.size;\n    var value = this.utf16to8(this.props.value);\n    var styles = this.state.isLoading\n      ? { width: 0, height: 0, overflow: \"hidden\" }\n      : undefined;\n    return (\n      <>\n        {this.state.isLoading && <ActivityIndicator />}\n        <View style={styles}>\n          <Canvas\n            context={{\n              size: size,\n              value: this.props.value,\n              bgColor: this.props.bgColor,\n              fgColor: this.props.fgColor,\n              cells: qr(value).modules\n            }}\n            generateImage={this.props.getImageOnLoad}\n            render={renderCanvas}\n            onLoad={this.props.onLoad}\n            onLoadEnd={this.onLoadEnd}\n            style={{ height: size, width: size }}\n          />\n        </View>\n      </>\n    );\n  }\n});\n\nmodule.exports = QRCode;\n"]},"metadata":{},"sourceType":"script"}