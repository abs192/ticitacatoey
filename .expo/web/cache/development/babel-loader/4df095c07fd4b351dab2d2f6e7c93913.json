{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\nvar Game = function Game() {\n  _classCallCheck(this, Game);\n};\n\nvar MessageTypes;\n\n(function (MessageTypes) {\n  MessageTypes[\"REGISTER_PLAYER\"] = \"REGISTER_PLAYER\";\n  MessageTypes[\"START_GAME\"] = \"START_GAME\";\n  MessageTypes[\"JOIN_GAME\"] = \"JOIN_GAME\";\n  MessageTypes[\"MAKE_MOVE\"] = \"MAKE_MOVE\";\n  MessageTypes[\"SPECTATE_GAME\"] = \"SPECTATE_GAME\";\n  MessageTypes[\"GAME_COMPLETE\"] = \"GAME_COMPLETE\";\n})(MessageTypes || (MessageTypes = {}));\n\nvar ErrorCodes;\n\n(function (ErrorCodes) {\n  ErrorCodes[\"GAME_NOT_FOUND\"] = \"GAME_NOT_FOUND\";\n  ErrorCodes[\"PLAYER_ALREADY_PART_OF_GAME\"] = \"PLAYER_ALREADY_PART_OF_GAME\";\n  ErrorCodes[\"GAME_ALREADY_IN_PROGRESS\"] = \"GAME_ALREADY_IN_PROGRESS\";\n  ErrorCodes[\"MOVE_OUT_OF_TURN\"] = \"MOVE_OUT_OF_TURN\";\n  ErrorCodes[\"INVALID_MOVE\"] = \"INVALID_MOVE\";\n  ErrorCodes[\"BAD_REQUEST\"] = \"BAD_REQUEST\";\n  ErrorCodes[\"BOARD_SIZE_LESS_THAN_2\"] = \"BOARD_SIZE_LESS_THAN_2\";\n  ErrorCodes[\"PLAYER_COUNT_LESS_THAN_2\"] = \"PLAYER_COUNT_LESS_THAN_2\";\n})(ErrorCodes || (ErrorCodes = {}));\n\nvar GameStatus;\n\n(function (GameStatus) {\n  GameStatus[\"WAITING_FOR_PLAYERS\"] = \"WAITING_FOR_PLAYERS\";\n  GameStatus[\"GAME_IN_PROGRESS\"] = \"GAME_IN_PROGRESS\";\n  GameStatus[\"GAME_WON\"] = \"GAME_WON\";\n  GameStatus[\"GAME_ENDS_IN_A_DRAW\"] = \"GAME_ENDS_IN_A_DRAW\";\n})(GameStatus || (GameStatus = {}));\n\nexport { Game, MessageTypes, ErrorCodes, GameStatus };","map":{"version":3,"sources":["C:/Users/adish/Documents/GitHub/ticitacatoey/game/model.tsx"],"names":["Game","MessageTypes","ErrorCodes","GameStatus"],"mappings":";;IAKMA,I;;;;IA4HDC,Y;;WAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;GAAAA,Y,KAAAA,Y;;IASAC,U;;WAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;IAWAC,U;;WAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAOL,SACEH,IADF,EAQEC,YARF,EASEC,UATF,EAUEC,UAVF","sourcesContent":["interface GameOptions{\r\n  isOnline: boolean;\r\n  boardSize: number;\r\n}\r\n\r\nclass Game {\r\n  gameId: string;\r\n  name: string;\r\n  boardSize: number;\r\n  positions: string[][];\r\n  playerCount: number;\r\n  players: string[];\r\n  spectators: string[];\r\n  winner: string;\r\n  winningSequence: string;\r\n  status: GameStatus;\r\n  turn: string;\r\n}\r\n\r\ninterface Player {\r\n  name: string;\r\n  playerId: string;\r\n}\r\n\r\ninterface ConnectedPlayer extends Player {\r\n  connection: WebSocket;\r\n}\r\n\r\ninterface GameStore {\r\n  [key: string]: Game;\r\n}\r\n\r\ninterface GameState {\r\n  game: Game;\r\n  players: {\r\n    [key: string]: Player;\r\n  };\r\n  spectators: {\r\n    [key: string]: Player;\r\n  };\r\n}\r\n\r\ninterface PlayerStore {\r\n  [key: string]: ConnectedPlayer;\r\n}\r\n\r\ninterface GameEngine {\r\n  games: GameStore;\r\n  players: PlayerStore;\r\n  play: (message: Message, notify: boolean) => Promise<GameEngine>;\r\n  validate: (message: Message) => Promise<Message>;\r\n  transition: (message: Message) => void;\r\n  disconnectPlayer: (playerId: string) => void;\r\n  notify: (message: Message) => void;\r\n  notifyError: (error: GameError) => void;\r\n}\r\n\r\n// Incoming messages - optional properties enriched by server\r\n\r\ninterface RegisterPlayerMessage {\r\n  type: MessageTypes.REGISTER_PLAYER;\r\n  name: string;\r\n  connection: WebSocket;\r\n  playerId?: string;\r\n  gameId?: string;\r\n}\r\n\r\ninterface StartGameMessage {\r\n  type: MessageTypes.START_GAME;\r\n  name: string;\r\n  boardSize: number;\r\n  playerCount: number;\r\n  connection?: WebSocket;\r\n  playerId?: string;\r\n  gameId?: string;\r\n}\r\n\r\ninterface JoinGameMessage {\r\n  type: MessageTypes.JOIN_GAME;\r\n  gameId: string;\r\n  connection?: WebSocket;\r\n  playerId?: string;\r\n}\r\n\r\ninterface SpectateGameMessage {\r\n  type: MessageTypes.SPECTATE_GAME;\r\n  gameId: string;\r\n  connection?: WebSocket;\r\n  playerId?: string;\r\n}\r\n\r\ninterface MakeMoveMessage {\r\n  type: MessageTypes.MAKE_MOVE;\r\n  coordinateX: number;\r\n  coordinateY: number;\r\n  gameId: string;\r\n  connection?: WebSocket;\r\n  playerId?: string;\r\n}\r\n\r\ntype Message =\r\n  | RegisterPlayerMessage\r\n  | StartGameMessage\r\n  | JoinGameMessage\r\n  | SpectateGameMessage\r\n  | MakeMoveMessage;\r\n\r\n// Responses\r\n\r\ninterface RegisterPlayerResponse extends Player {\r\n  type: MessageTypes.REGISTER_PLAYER;\r\n}\r\n\r\ninterface GameActionResponse extends GameState {\r\n  type:\r\n    | MessageTypes.START_GAME\r\n    | MessageTypes.JOIN_GAME\r\n    | MessageTypes.MAKE_MOVE\r\n    | MessageTypes.SPECTATE_GAME\r\n    | MessageTypes.GAME_COMPLETE;\r\n}\r\n\r\ntype Response = RegisterPlayerResponse | GameActionResponse;\r\n\r\ninterface GameError {\r\n  error: ErrorCodes;\r\n  message: Message;\r\n}\r\n\r\nenum MessageTypes {\r\n  REGISTER_PLAYER = \"REGISTER_PLAYER\",\r\n  START_GAME = \"START_GAME\",\r\n  JOIN_GAME = \"JOIN_GAME\",\r\n  MAKE_MOVE = \"MAKE_MOVE\",\r\n  SPECTATE_GAME = \"SPECTATE_GAME\",\r\n  GAME_COMPLETE = \"GAME_COMPLETE\", // response only\r\n}\r\n\r\nenum ErrorCodes {\r\n  GAME_NOT_FOUND = \"GAME_NOT_FOUND\",\r\n  PLAYER_ALREADY_PART_OF_GAME = \"PLAYER_ALREADY_PART_OF_GAME\",\r\n  GAME_ALREADY_IN_PROGRESS = \"GAME_ALREADY_IN_PROGRESS\",\r\n  MOVE_OUT_OF_TURN = \"MOVE_OUT_OF_TURN\",\r\n  INVALID_MOVE = \"INVALID_MOVE\",\r\n  BAD_REQUEST = \"BAD_REQUEST\",\r\n  BOARD_SIZE_LESS_THAN_2 = \"BOARD_SIZE_LESS_THAN_2\",\r\n  PLAYER_COUNT_LESS_THAN_2 = \"PLAYER_COUNT_LESS_THAN_2\",\r\n}\r\n\r\nenum GameStatus {\r\n  WAITING_FOR_PLAYERS = \"WAITING_FOR_PLAYERS\",\r\n  GAME_IN_PROGRESS = \"GAME_IN_PROGRESS\",\r\n  GAME_WON = \"GAME_WON\",\r\n  GAME_ENDS_IN_A_DRAW = \"GAME_ENDS_IN_A_DRAW\",\r\n}\r\n\r\nexport {\r\n  Game,\r\n  GameOptions,\r\n  Player,\r\n  GameStore,\r\n  PlayerStore,\r\n  GameEngine,\r\n  GameError,\r\n  MessageTypes,\r\n  ErrorCodes,\r\n  GameStatus,\r\n  ConnectedPlayer,\r\n  GameState,\r\n  Message,\r\n  RegisterPlayerResponse,\r\n  GameActionResponse,\r\n  Response,\r\n};"]},"metadata":{},"sourceType":"module"}